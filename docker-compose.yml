version: '3.7'

services:

  # Metabase + PostgreSQL services

  metabase:
    image: metabase/metabase
    ports:
      - "3000:3000"
    depends_on:
      - metabase_db
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: $MB_DB_ADMIN
      MB_DB_PASS: $MB_DB_PASSWORD
      MB_DB_HOST: metabase_db


  metabase_db:
    image: postgres:10-alpine
    environment:
      POSTGRES_USER: $MB_DB_ADMIN
      POSTGRES_PASSWORD: $MB_DB_PASSWORD
      POSTGRES_DB: metabase
      
  
  # postgreSQL service (share data between services)

  postgres_dwh:
    image: postgres:10-alpine
    volumes:
      - "./data_repo:/host"
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: $DWH_POSTGRES_ADMIN
      POSTGRES_PASSWORD: $DWH_POSTGRES_PASSWORD
      POSTGRES_DB: testdb

  metabase_configurator:
    build: ./metabase_configurator
    command: python -u app.py
    volumes:
      - ./metabase_configurator/src:/src
    depends_on: 
      - metabase
    environment:
      DWH_POSTGRES_ADMIN: $DWH_POSTGRES_ADMIN
      DWH_POSTGRES_PASSWORD: $DWH_POSTGRES_PASSWORD
      DWH_POSTGRES_DB: testdb
      DWH_POSTGRES_HOST: postgres_dwh
      MB_ADMIN_FIRST_NAME: $MB_ADMIN_FIRST_NAME
      MB_ADMIN_LAST_NAME: $MB_ADMIN_LAST_NAME
      MB_ADMIN_EMAIL: $MB_ADMIN_EMAIL
      MB_ADMIN_PASSWORD: $MB_ADMIN_PASSWORD
    # stdin_open: true
    # tty: true

## Meltano

  meltano-ui:
    image: meltano/meltano
    command: ui
    # command: init demo_project
    volumes:
    - ./demo_project/demo_project:/demo_project
    expose:
      - 5000
    ports:
      - 5000:5000
    restart: unless-stopped
    working_dir: /demo_project
    # stdin_open: true # docker run -i
    # tty: true
