import requests as rq
import os

# MB_SETUP_TOKEN = os.environ['MB_SETUP_TOKEN']
MB_FIRST_NAME = os.environ['MB_FIRST_NAME']
MB_LAST_NAME = os.environ['MB_LAST_NAME']
MB_EMAIL = os.environ['MB_EMAIL']
MB_PASSWORD = os.environ['MB_PASSWORD']

METABASE_HOST='http://metabase:3000'
SETUP_TOKEN_ENDPOINT='api/session/properties'
SETUP_ADMIN_ENDPOINT='api/setup'
SETUP_DATABASE_ENDPOINT='api/database'
NEW_USER_ENDPOINT='api/user'

SETUP_TOKEN_URL = f'{METABASE_HOST}/{SETUP_TOKEN_ENDPOINT}'
SETUP_ADMIN_URL = f'{METABASE_HOST}/{SETUP_ADMIN_ENDPOINT}'
SETUP_DATABASE_URL = f'{METABASE_HOST}/{SETUP_DATABASE_ENDPOINT}'
NEW_USER_URL = f'{METABASE_HOST}/{NEW_USER_ENDPOINT}'


## Get Token
res_token = rq.get(SETUP_TOKEN_URL)
if res_token.ok:
    print('Got Token')
    temp_token = res_token.json()['setup-token']
    print(f'Temporary token generated by Metabase : {temp_token}')

## Create Admin
data_admin = {
    "token": temp_token,
    "prefs":{"site_name":"Test","allow_tracking":"true", "site_locale":"fr"},
    "user": {
        "email": MB_EMAIL, 
        "password": MB_PASSWORD,
        "first_name": MB_FIRST_NAME,
        "last_name": MB_LAST_NAME,
        "site_name":"Test"
    },
    "database": None
}

res_admin = rq.post(SETUP_ADMIN_URL, json=data_admin)
if res_admin.ok:
    auth_token = res_admin.json()['id']
    dc_headers = {'X-Metabase-Session':auth_token}
    print(auth_token)
    print('Admin created')

## Create a user

# dc_user = {
#     "first_name":"Basic",
#     "last_name":"User",
#     "email":"basic@somewhere.com",
#     "password":"Sup3rS3cure_:}"
# }

# res_user = rq.post(NEW_USER_URL, json=dc_user, headers=dc_headers)
# if res_user.ok:
#     print('User successfully created')

## Setup Database

dc_db = {
    "engine": "postgres",
    "name": "DWH Postgres",
    "details": {
        "host": "postgres_db",
        "port": "5432",
        "db": "testdb",
        "user": "admin",
        "password": "pass4db"
    }
}

res_db = rq.post(SETUP_DATABASE_URL, json=dc_db, headers=dc_headers)

if res_db.ok:
    print('Database succesfully create')